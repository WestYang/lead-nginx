user nginx nginx;
worker_processes 8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 0100000 10000000;
worker_rlimit_nofile 65535;
error_log /usr/local/nginx/logs/error.log warn;

pid /usr/local/nginx/logs/nginx.pid;

events {
    use epoll;
    worker_connections  65535;
    multi_accept on;
    accept_mutex on;
}

http {
    include mime.types;
    default_type application/octet-stream;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    map $http_x_forwarded_for $clientRealIP {
        "" $remote_addr;
        ~^(?P<firstAddr>[0-9\.]+),?.*$ $firstAddr;
    }
    
    #log_format  main  '$proxy_protocol_addr - $remote_addr - $remote_user [$time_local] $http_host $request_method "$uri" "$query_string" '
    #              '$status $body_bytes_sent "$http_referer" $upstream_status $upstream_addr $request_time $upstream_response_time '
    #              '"$http_user_agent" "$http_true_client_ip" "$http_x_forwarded_for"' ;
    server_tokens off;
    #access_log  logs/access.log  main;
    #access_log  off;
    log_format access_json '{"@timestamp":"$time_iso8601",'
                           '"host":"$server_addr",'
                           '"nginx_name":"$hostname",'
                           #'"clientip":"$proxy_protocol_addr",'
                           '"clientip":"$remote_addr",'
                           '"body_bytes_sent":$body_bytes_sent,'
                           '"responsetime":$request_time,'
                           '"upstream_response_time":"$upstream_response_time",'
                           '"upstream_addr":"$upstream_addr",'
                           '"upstream_status":"$upstream_status",'
                           '"http_host":"$host",'
                           '"request_method":"$request_method",'
                           '"url":"$uri",'
                           '"xff":"$http_x_forwarded_for",'
                           '"http_referer":"$http_referer",'
                           '"user_agent":"$http_user_agent",'
                           '"http_status":"$status"}';
    access_log  logs/access.log  access_json;

    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    proxy_buffers 64 512k;
    proxy_buffer_size 128k;
    proxy_busy_buffers_size 16m;
    proxy_temp_file_write_size 16m;

     proxy_temp_path /usr/local/nginx/proxy_temp;
     proxy_cache_path /usr/local/nginx/ehrcloud_cache levels=1:2 keys_zone=cache_ehrcloud:100m inactive=1d max_size=1g;
     proxy_intercept_errors on;
     proxy_redirect off;
     proxy_next_upstream http_502 http_504 error timeout invalid_header;
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header REMOTE-HOST $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    #lua_package_cpath '/usr/local/luajit/lib/?.so;;';
    #lua_package_path '/usr/local/nginx/conf/waf/?.lua;;';
    #lua_shared_dict limit 10m;
    #init_by_lua_file /usr/local/nginx/conf/waf/init.lua;

    map $http_x_forwarded_for $clientRealIp {
        "" $remote_addr;
        ~^(?P<firstAddr>[0-9\.]+),?.*$ $firstAddr;
    }

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 512;
    keepalive_timeout  65;
    keepalive_requests 10000;
    client_body_buffer_size 1024k;
    client_header_buffer_size 512k;
    large_client_header_buffers 4 512k;
    types_hash_max_size 2048;
    client_max_body_size 1024m;
    client_header_timeout  60s;
    client_body_timeout   60s;
    fastcgi_buffers 8 128k;
    fastcgi_buffer_size 128k;

    send_timeout  600s;
    gzip on;
    gzip_min_length  2k;
    gzip_disable "MISE [1-6].";
    gzip_proxied any;
    gzip_buffers  4 32k;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    #gzip_types  text/plain text/css application/x-javascript application/javascript application/xml;
    gzip_types  text/plain text/css text/xml text/x-component application/x-javascript application/javascript application/xml application/json application/rss+xml application/atom+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_vary on;

    server {
       listen 80 default_server;
       server_name _;
       location /basic_status {
           allow 127.0.0.1;
           deny all;
           stub_status on;
           access_log off;
       }
       #include /usr/local/nginx/conf/error_page.conf;
    }

    server {
        listen 443 ssl default_server;
        server_name _;
        ssl_certificate cert/cert_leadchina.cn.pem;
        ssl_certificate_key cert/cert_leadchina.cn.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        return 403;
    }
    include /usr/local/nginx/vhosts/*.conf;
}
